{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    },
    {
      "source": "/home",
      "destination": "/",
      "statusCode": 308,
      "regex": "^(?!/_next)/home(?:/)?$"
    },
    {
      "source": "/shop",
      "destination": "/products",
      "statusCode": 308,
      "regex": "^(?!/_next)/shop(?:/)?$"
    }
  ],
  "headers": [
    {
      "source": "/:path*",
      "headers": [
        {
          "key": "X-DNS-Prefetch-Control",
          "value": "on"
        },
        {
          "key": "Strict-Transport-Security",
          "value": "max-age=63072000; includeSubDomains; preload"
        },
        {
          "key": "X-XSS-Protection",
          "value": "1; mode=block"
        },
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "origin-when-cross-origin"
        }
      ],
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    },
    {
      "source": "/api/:path*",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "no-store, max-age=0"
        }
      ],
      "regex": "^/api(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    },
    {
      "source": "/_next/static/:path*",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/_next/static(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "dynamicRoutes": [
    {
      "page": "/api/orders/[id]",
      "regex": "^/api/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/products/local/[id]",
      "regex": "^/api/products/local/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/products/local/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/products/[id]",
      "regex": "^/api/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/products/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/order-confirmation/[id]",
      "regex": "^/order\\-confirmation/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/order\\-confirmation/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/products/[id]",
      "regex": "^/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/products/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/analytics",
      "regex": "^/admin/analytics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/analytics(?:/)?$"
    },
    {
      "page": "/admin/login",
      "regex": "^/admin/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/login(?:/)?$"
    },
    {
      "page": "/admin/orders",
      "regex": "^/admin/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/orders(?:/)?$"
    },
    {
      "page": "/admin/products",
      "regex": "^/admin/products(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/products(?:/)?$"
    },
    {
      "page": "/admin/products/add",
      "regex": "^/admin/products/add(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/products/add(?:/)?$"
    },
    {
      "page": "/admin/products/new",
      "regex": "^/admin/products/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/products/new(?:/)?$"
    },
    {
      "page": "/admin/settings",
      "regex": "^/admin/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/settings(?:/)?$"
    },
    {
      "page": "/cart",
      "regex": "^/cart(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/cart(?:/)?$"
    },
    {
      "page": "/checkout",
      "regex": "^/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/debug-auth",
      "regex": "^/debug\\-auth(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-auth(?:/)?$"
    },
    {
      "page": "/fulkari",
      "regex": "^/fulkari(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/fulkari(?:/)?$"
    },
    {
      "page": "/jutti",
      "regex": "^/jutti(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/jutti(?:/)?$"
    },
    {
      "page": "/kids",
      "regex": "^/kids(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/kids(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/men",
      "regex": "^/men(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/men(?:/)?$"
    },
    {
      "page": "/order-confirmation",
      "regex": "^/order\\-confirmation(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/order\\-confirmation(?:/)?$"
    },
    {
      "page": "/our-story",
      "regex": "^/our\\-story(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/our\\-story(?:/)?$"
    },
    {
      "page": "/privacy",
      "regex": "^/privacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/privacy(?:/)?$"
    },
    {
      "page": "/products",
      "regex": "^/products(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/products(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/returns",
      "regex": "^/returns(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/returns(?:/)?$"
    },
    {
      "page": "/shipping",
      "regex": "^/shipping(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shipping(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    },
    {
      "page": "/size-guide",
      "regex": "^/size\\-guide(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/size\\-guide(?:/)?$"
    },
    {
      "page": "/terms",
      "regex": "^/terms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms(?:/)?$"
    },
    {
      "page": "/test-order",
      "regex": "^/test\\-order(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-order(?:/)?$"
    },
    {
      "page": "/women",
      "regex": "^/women(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/women(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}